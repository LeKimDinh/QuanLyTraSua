<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAASUVORK5CYII=
</value>
  </data>
</root>